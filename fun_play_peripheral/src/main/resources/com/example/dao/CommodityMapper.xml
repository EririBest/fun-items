<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dao.CommodityMapper">
    <insert id="addUserGoods">
        insert into usergoods (`userid`,`title`,`price`,`type`,`imgpath`,`xmlpath`) values (#{id},#{title},#{price},#{type},#{ipath},#{xpath})
    </insert>
    <select id="getUserCommoditys" resultType="Goods">
        select `id`,`userid`,`title`,`price`,`type`,`imgpath`,`xmlpath` from usergoods where userid=#{id}
    </select>
    <select id="getCommoditys" resultType="Goods">
        select `id`,`userid`,`title`,`price`,`type`,`imgpath`,`xmlpath` from usergoods
    </select>
    <select id="getById" resultType="Goods">
        select `id`,`userid`,`title`,`price`,`type`,`imgpath`,`xmlpath` from usergoods where id=#{id}
    </select>
    <select id="getKey" resultType="Goods">
        select distinct `type` from usergoods
    </select>
    <select id="getByType" resultType="Goods">
        select `id`,`userid`,`title`,`price`,`type`,`imgpath`,`xmlpath` from usergoods where type=#{keyword}
    </select>
    <select id="select" resultType="Goods">
        select `id`,`userid`,`title`,`price`,`type`,`imgpath`,`xmlpath` from usergoods where title like concat('%',#{keyword},'%') or type like concat('%',#{keyword},'%')
    </select>
</mapper>